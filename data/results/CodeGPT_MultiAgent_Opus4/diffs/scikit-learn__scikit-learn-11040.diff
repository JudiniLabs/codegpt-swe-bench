--- a/sklearn/neighbors/base.py
+++ b/sklearn/neighbors/base.py
@@ -8,6 +8,7 @@
 # License: BSD 3 clause (C) INRIA, University of Amsterdam
 import warnings
 from abc import ABCMeta, abstractmethod
+import numbers
 
 import numpy as np
 from scipy.sparse import csr_matrix, issparse
@@ -115,6 +116,13 @@
         self.metric_params = metric_params
         self.p = p
         self.n_jobs = n_jobs
+
+        # Validate n_neighbors type
+        if self.n_neighbors is not None:
+            if not isinstance(self.n_neighbors, (numbers.Integral, np.integer)):
+                raise TypeError("n_neighbors must be an integer, got %s instead."
+                                % type(self.n_neighbors))
+
         self._check_algorithm_metric()
 
     def _check_algorithm_metric(self):
@@ -327,6 +335,11 @@
 
         if n_neighbors is None:
             n_neighbors = self.n_neighbors
+        else:
+            # Validate n_neighbors type when passed as parameter
+            if not isinstance(n_neighbors, (numbers.Integral, np.integer)):
+                raise TypeError("n_neighbors must be an integer, got %s instead."
+                                % type(n_neighbors))
 
         if X is not None:
             query_is_train = False

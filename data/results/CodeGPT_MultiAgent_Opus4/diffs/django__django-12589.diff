--- a/django/db/models/sql/query.py
+++ b/django/db/models/sql/query.py
@@ -1929,6 +1929,32 @@
         """
         group_by = list(self.select)
         if self.annotation_select:
+            # Collect all column names from tables in alias_map to detect collisions
+            column_names = set()
+            if allow_aliases:
+                # Get the base model's fields
+                base_model = self.model
+                if base_model:
+                    for field in base_model._meta.get_fields():
+                        if hasattr(field, 'column'):
+                            column_names.add(field.column)
+
+                # Get column names from joined tables
+                for alias, alias_info in self.alias_map.items():
+                    if hasattr(alias_info, 'join_field') and alias_info.join_field:
+                        # Get the related model
+                        join_field = alias_info.join_field
+                        if hasattr(join_field, 'related_model') and join_field.related_model:
+                            related_model = join_field.related_model
+                            for field in related_model._meta.get_fields():
+                                if hasattr(field, 'column'):
+                                    column_names.add(field.column)
+                        # Also check the source model of the join
+                        if hasattr(join_field, 'model') and join_field.model:
+                            for field in join_field.model._meta.get_fields():
+                                if hasattr(field, 'column'):
+                                    column_names.add(field.column)
+
             for alias, annotation in self.annotation_select.items():
                 signature = inspect.signature(annotation.get_group_by_cols)
                 if 'alias' not in signature.parameters:
@@ -1940,9 +1966,11 @@
                     warnings.warn(msg, category=RemovedInDjango40Warning)
                     group_by_cols = annotation.get_group_by_cols()
                 else:
-                    if not allow_aliases:
-                        alias = None
-                    group_by_cols = annotation.get_group_by_cols(alias=alias)
+                    # Check for collision with column names in joined tables
+                    use_alias = alias
+                    if not allow_aliases or (alias in column_names):
+                        use_alias = None
+                    group_by_cols = annotation.get_group_by_cols(alias=use_alias)
                 group_by.extend(group_by_cols)
         self.group_by = tuple(group_by)
 

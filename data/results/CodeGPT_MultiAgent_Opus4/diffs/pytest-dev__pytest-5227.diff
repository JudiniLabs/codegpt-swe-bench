--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -15,7 +15,7 @@
 from _pytest.config import create_terminal_writer
 from _pytest.pathlib import Path
 
-DEFAULT_LOG_FORMAT = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+DEFAULT_LOG_FORMAT = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 DEFAULT_LOG_DATE_FORMAT = "%H:%M:%S"
 
 
--- a/testing/logging/test_formatter.py
+++ b/testing/logging/test_formatter.py
@@ -6,7 +6,7 @@
 
 
 def test_coloredlogformatter():
-    logfmt = "%(filename)-25s %(lineno)4d %(levelname)-8s %(message)s"
+    logfmt = "%(levelname)-8s %(name)s:%(filename)s:%(lineno)d %(message)s"
 
     record = logging.LogRecord(
         name="dummy",
@@ -27,10 +27,10 @@
     formatter = ColoredLevelFormatter(tw, logfmt)
     output = formatter.format(record)
     assert output == (
-        "dummypath                   10 \x1b[32mINFO    \x1b[0m Test Message"
+        "\x1b[32mINFO    \x1b[0m dummy:dummypath:10 Test Message"
     )
 
     tw.hasmarkup = False
     formatter = ColoredLevelFormatter(tw, logfmt)
     output = formatter.format(record)
-    assert output == ("dummypath                   10 INFO     Test Message")
+    assert output == ("INFO     dummy:dummypath:10 Test Message")

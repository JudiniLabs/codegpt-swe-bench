{
    "django/db/models/sql/query.py": [
        {
            "orig_text": " else:\n if not allow_aliases:\n alias = None\n group_by_cols = annotation.get_group_by_cols(alias=alias)\n group_by.extend(group_by_cols)\n self.group_by = tuple(group_by)\n",
            "new_text": " else:\n if not allow_aliases and alias is not None:\n if alias in self.annotation_select:\n annotation_alias = alias\n else:\n annotation_alias = next(\n (k for k, v in self.annotation_select.items() if v == annotation),\n None,\n )\n if annotation_alias is not None:\n refs = set()\n for col in self.select:\n if isinstance(col, Col):\n refs.add(col.target.name)\n for table in self.alias_map.values():\n if not isinstance(table, BaseTable):\n continue\n refs.update(col.name for col in table.column_names)\n if annotation_alias in refs:\n alias = None\n group_by_cols = annotation.get_group_by_cols(alias=alias)\n group_by.extend(group_by_cols)\n self.group_by = tuple(group_by)\n",
            "match_ratio": 0.7857142857142857,
            "match_segment": "ne\n                    group_by_cols = annotation.get_group_by_cols(alias=alias)\n                group_by.extend(group_by_cols)\n        self.group_by = tuple(group_by)\n",
            "num_matches": 0
        }
    ]
}